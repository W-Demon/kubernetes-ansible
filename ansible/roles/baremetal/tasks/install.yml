---
- name: Hanlder the kubernetes stuffs
  block:
    # Install docker py packages to pull images
    - name: Install docker packages
      become: true
      pip:
        name: docker
        state: present
        extra_args: --ignore-installed
      changed_when: false

    - name: Ensure /etc/docker directories exists
      file:
        name: /etc/docker
        state: directory

    - name: Copy docker repo for kubernetes nodes
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      loop:
        - {"src": docker-ce.repo.j2, "dest": /etc/yum.repos.d/docker-ce.repo}
        - {"src": kube-daemon.json.j2, "dest": /etc/docker/daemon.json}
        - {"src": kubernetes.repo.j2, "dest": /etc/yum.repos.d/kubernetes.repo}

    - name: Install docker and kubernetes packages
      yum:
        name:
          - "docker-ce-{{ docker_release }}.ce"
          - "kubelet-{{ kube_release }}"
          - "kubeadm-{{ kube_release }}"
          - "kubectl-{{ kube_release }}"
        state: present

    - name: Restart docker service
      service:
        name: docker
        state: restarted
        enabled: yes
      changed_when: false

    # Somethings service module invoke enable command failed,
    # but I do not know the reason, use shell module to avoid.
    # The failed message is
    # Could not find the requested service kubelet: host
    - name: Enable kubelet service
      shell: systemctl enable kubelet
      changed_when: false

    - name: Get kube images list by kubeadm config
      kube_docker:
        kube_version: "{{ kube_version }}"
        image_action: get
      register: kube_images
      delegate_to: "{{ groups['kube-master'][0] }}"
      run_once: True

    - set_fact:
        images_list: "{{ kube_images.result.images_list }}"
      changed_when: false

    - name: Pull kube images for kubernetes nodes
      kube_docker:
        kube_version: "{{ kube_version }}"
        kube_image: "{{ item.image_repo }}:{{ item.image_tag }}"
        image_action: pull
        cleanup: True
      when:
        - inventory_hostname in groups[item.group]
      loop: "{{ images_list }}"
      loop_control:
        label:
          - "{{ item.image_repo }}"
          - "{{ item.image_tag }}"
  when:
    - inventory_hostname in groups['kubernetes']
    - enable_kubernetes | bool

- name: Pull metrics server images
  kube_docker:
    kube_version: "{{ kube_version }}"
    kube_image: "{{ item }}"
    image_action: pull
    cleanup: True
  loop: "{{ metrics_server_images }}"
  when:
    - inventory_hostname in groups['kubernetes']
    - enable_metrics_server | bool

- name: Install kubernetes package for first master node
  pip:
    name: kubernetes
    state: present
    extra_args: --ignore-installed
  changed_when: false
  delegate_to: "{{ groups['kube-master'][0] }}"
  run_once: True
  when:
    - enable_kubernetes | bool